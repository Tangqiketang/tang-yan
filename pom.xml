<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.tqkt</groupId>
  <artifactId>Tang_yan</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
	  <properties>
	    <env>test</env>
	    <redis.version>2.9.0</redis.version>
	  </properties>
	  
	  <profiles>
	        <profile>
	            <id>dev</id>
	            <properties>
	                <env>dev</env>
	            </properties>
	        </profile>
	        <profile>
	            <id>test</id>
	            <properties>
	                <env>test</env>
	            </properties>
	        </profile>
	        <profile>
	            <id>product</id>
	            <properties>
	                <env>product</env>
	            </properties>
	        </profile>
	    </profiles>
  
  
    <dependencies>
        <!-- springboot核心依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>1.5.4.RELEASE</version>
		</dependency>
		
		<!-- 热部署 -->
		<!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <version>2.0.0.RELEASE</version>
        </dependency> -->
        
        <!-- redis缓存 -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>${redis.version}</version>
        </dependency>
    
    </dependencies>
	
	
	<build>
	        <filters>
	            <filter>src/main/filters/filter-${env}-env.properties</filter>
	        </filters>
	        <resources>
	            <resource>
	                <directory>src/main/java</directory>
	                <includes>
	                    <include>**/*.xml</include>
	                    <include>**/*.properties</include>
	                </includes>
	                <filtering>false</filtering>
	            </resource>
	            
	            <resource>
	                <directory>src/main/resources</directory>
	                <filtering>true</filtering>
	                <includes>
	                    <include>**/*</include>
	                </includes>
	            </resource>
	        </resources>
	        
	        
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source> <!-- 源代码使用的开发版本 -->
                    <target>1.8</target> <!-- 需要生成的目标class文件的编译版本 -->
                    <!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中需要没有使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->
                    <encoding>UTF8</encoding>
                    <!--windows默认使用GBK编码，java项目经常编码为utf8，也需要在compiler插件中指出，否则中文乱码可能会出现编译错误 -->
                </configuration>
            </plugin>
        </plugins>
        <finalName>Tang_yan</finalName><!-- 项目名 -->
    </build>
	
</project>